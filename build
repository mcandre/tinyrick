#!/bin/sh
#
# Avoid make in order to work around https://github.com/rust-lang/rust/issues/52801
unset IFS
set -euf

PACKAGE='tinyrick'
VERSION='0.0.10'
ARCHIVE="${PACKAGE}-${VERSION}.zip"

unit_test() {
    install &&
    sh -c "cd example && tinyrick -l" &&
    sh -c "cd example && tinyrick -v" &&
    sh -c "cd example && tinyrick -h" &&
    sh -c "cd example && tinyrick" &&
    sh -c "cd example && VERBOSE=1 tinyrick test clippy lint build_debug build_release build doc install unit_test integration_test test banner uninstall clean_cargo clean"
}

install_binaries() {
    cargo install --force --path .
}

install() {
    install_binaries
}

uninstall() {
    cargo uninstall tinyrick
}

clippy() {
    cargo clippy
}

doc() {
    cargo doc
}

audit() {
    cargo audit
}

lint() {
    doc &&
    clippy
}

build() {
    lint &&
    unit_test &&
    cargo build --release
}

publish() {
    cargo publish
}

crosscompile() {
    ./crosscompile-linux x86_64 gnu &&
    ./crosscompile-linux x86_64 musl
}

port() {
    crosscompile &&
    zip "$ARCHIVE" \
    target/x86_64-unknown-linux-gnu/release/tinyrick target/x86_64-unknown-linux-musl/release/tinyrick
}

clean_example() {
    rm -rf example/target;
    rm -rf example/Cargo.lock
}

clean_cargo() {
    cargo clean
}

clean_ports() {
    rm ./*.zip
}

clean() {
    clean_example;
        clean_cargo;
        clean_ports
}

if [ "$#" -lt 1 ]; then
    build
    return "$?"
fi

for task in "$@"; do
    "$task"
done
